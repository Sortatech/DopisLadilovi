@page "/"
@inject IJSRuntime JS

@code {
    private string passphrase = string.Empty;
    private bool isAuthenticated = false;
    private string challenge = string.Empty;
    private string activeLevel = "OK";

    // Error dialog properties
    private bool showErrorDialog = false;
    private string errorMessage = string.Empty;

    // Define the levels in order
    private string[] levels = new string[] { "OK", "OK-ish", "brutal", "hardcore" };

    private int GetLevelIndex(string level)
        => Array.IndexOf(levels, level);

    // Checks whether an element has any level-related classes
    private bool ShouldFilter(IEnumerable<string> classes) =>
        classes.Any(c => levels.Contains(c) || c.EndsWith("-off"));

    // Business logic:
    // For an element with one or more level-related classes, show it if it has any class
    // with an index <= active level’s index, unless the element has a class exactly
    // equal to activeLevel + "-off" in which case it should be hidden.
    private bool ShouldShowElement(params string[] classes)
    {
        if (!ShouldFilter(classes))
        {
            return true;
        }

        if (classes.Any(c => c == activeLevel + "-off"))
        {
            return false;
        }

        int activeIdx = GetLevelIndex(activeLevel);
        return classes.Any(c =>
        {
            int idx = Array.IndexOf(levels, c);
            return idx != -1 && idx <= activeIdx;
        });
    }

    protected override async Task OnInitializedAsync()
    {
        challenge = await JS.InvokeAsync<string>("getChallenge");
    }

    private async Task CheckPassphrase()
    {
        // Validate the passphrase using the JS function
        isAuthenticated = await JS.InvokeAsync<bool>("validatePassphrase", passphrase);

        if (!isAuthenticated)
        {
            // Instead of a browser alert, show our styled error modal.
            errorMessage = "Intuere me, perfringe me";
            showErrorDialog = true;
        }
    }

    private async Task ToggleOverlay(string cssClass)
    {
        await JS.InvokeVoidAsync("toggleOverlay", cssClass);
    }

    private void SetActiveLevel(string level)
    {
        activeLevel = level;
    }
    
    private async Task CloseErrorDialog()
    {
        showErrorDialog = false;
        await InvokeAsync(StateHasChanged);
    }
}



@if (!isAuthenticated)
{
    <div class="overlay">
        <div class="challenge-box">
            <p>@challenge</p>
            <input @bind="passphrase" placeholder="Inserite tessera secreta" />
            <button @onclick="CheckPassphrase">Mitte</button>
        </div>
    </div>
}
else
{
    <div class="center-container">
        <div class="content cimrman">
            <!-- Cringe level button bar -->
            <div class="cringe-level">
                <button class="level-button @(activeLevel == "OK" ? "active" : "")" @onclick='() => SetActiveLevel("OK")'>
                    <div class="image-container">
                        <img src="images/ok.jpg" alt="OK Level" />
                    </div>
                </button>
                <button class="level-button @(activeLevel == "OK-ish" ? "active" : "")" @onclick='() => SetActiveLevel("OK-ish")'>
                    <div class="image-container">
                        <img src="images/ok-ish.jpg" alt="OK-ish Level" />
                    </div>
                </button>
                <button class="level-button @(activeLevel == "brutal" ? "active" : "")" @onclick='() => SetActiveLevel("brutal")'>
                    <div class="image-container">
                        <img src="images/brutal.jpg" alt="Brutal Level" />
                    </div>
                </button>
                <button class="level-button @(activeLevel == "hardcore" ? "active" : "")" @onclick='() => SetActiveLevel("hardcore")'>
                    <div class="image-container">
                        <img src="images/hardcore.jpg" alt="Hardcore Level" />
                    </div>
                </button>
            </div>
            <br/>
            <!-- Example content that is always visible -->
            <p class="grey">Milý příteli,</p>

            <!-- Example filtered pre elements -->
            @if (ShouldShowElement("OK"))
            {
                <pre class="OK">umělou vagínu, umělou inteligencí vybavenou,
žel tu nemáš v obálkách tučných přibalenou.
Tu zaházeli v ložnici dělníci konstrukcí při rekonstrukci.</pre>
            }

            @if (ShouldShowElement("OK"))
            {
                <pre class="OK">Zavděk vezmi, prosím, míčem,
trudomyslnosti bičem.</pre>
            }

            @if (ShouldShowElement("hardcore"))
            {
                <pre class="hardcore">Je z řady <a class="hebkost" role="button" tabindex="0" @onclick='() => ToggleOverlay(".hebkost")'><span>ten nejvíc hebký</span></a>,
gumička je v příslušenství,
bys ho přived k poslušenství.
Oholit vlas z vlastní lebky?
Jak solidér se pera chopit?
když teď rukou musíš psát,
inkoust perem zkusit vsát?
literární počin ztropit?</pre>
            }

            @if (ShouldShowElement("OK", "hardcore-off"))
            {
                <pre class="OK hardcore-off">Vyniká svou <a class="hebkost" role="button" tabindex="0" @onclick='() => ToggleOverlay(".hebkost")'><span>hebkostí</span></a>,
přiloženou gumičkou,
přitáhneš ho s lehkostí,
budeš jeho paničkou!</pre>
            }

            @if (ShouldShowElement("brutal"))
            {
                <pre class="brutal">Bit či ne-bit, být či nebýt, člověk míní, život mění, (*)
Klišé?!! Touché!
Být či být, jiná možnost možná kruci není!
Nebo je?
Ne! Kočka žije!(**)</pre>
            }

            @if (ShouldShowElement("OK"))
            {
                <pre class="OK">Kámo, ještě podaruji Tě,
v naší virtuální realitě,
okuláry k virtuální realitě,</pre>
            }

            @if (ShouldShowElement("hardcore"))
            {
                <pre class="hardcore">aby se Ti lépe zvracelo,
jsme teď zas v pořádný kaši,
historie se zase opakuje,
realitu neskutečně skutečnou, tu naši.</pre>
            }

            @if (ShouldShowElement("OK-ish"))
            {
                <pre class="OK">Je to blbé, ale je to tak,
dcera má má ne-moc jak ty,
nemám se štěstěnou pakty,
roste mi z ní levák!</pre>
            }

            @if (ShouldShowElement("OK-ish"))
            {
                <pre class="OK">Že jsem nula negativní,
může být i pozitivní,
zůstal jsem zas nepochopen,
z kosti vnitřky dát jsem schopen.</pre>
            }

            <!-- Example filtered p element -->
            @if (ShouldShowElement("brutal"))
            {
                <pre class="brutal">Jak clifhanger teď viset musíš,
jak kůň o život dříti zkusíš,
drž na hraně hodně pevně,
uvnitř sílu najdeš i vně,
lidi silný příběh mají rádi,
fundátorem buď v nové straně,
budou noví kamarádi.</pre>
            }

            @if (ShouldShowElement("hardcore"))
            {
                <pre class="hardcore">Je to blbé, ale je to tak,
dcera má má ne-moc jak ty,
leč nemám žádný s ďáblem pakty,
roste mi z ní levák!</pre>
            }

            <!-- Elements without level-related classes, always visible -->
            <b>Pozn.:</b>
            <pre>Gumicuk lze použít obecně, aby se Ti vracelo,
co chceš, aby se ti vracelo:
manželka,
tvá pánská kabelka,
nebo ňáká šikovná sestřička,
bez trička,
nebo s tričkem s kočkou stále živou, nebo bratr,
kognice i kondice,
děti, ať jste zase v pěti
vtipnost a vtipnost (***),
ducha mladost, ze života radost, (****)</pre>
            @if (ShouldShowElement("brutal"))
            {
                <pre>a zdravá nasranost,</pre>
            }
            <pre>jediný problém je umět to správně uvázat...</pre>
            <br/>
            @if (ShouldShowElement("brutal"))
            {
                <p class="brutal">
                    * tady není Krakonošovo, „Tady je „Kvantovo“!“, proto tam nejsou čárky 😉
                </p>}
            @if (ShouldShowElement("brutal"))
            {
                <p class="brutal">
                    ** teď nemyslím ty kolotočáře
                </p>
            }
            <p>
                *** všimni si, že schválně nepíšu synonymum toho slova, protože s tím se rýmuje takový ošklivý a zlý - nepěkná věc!
                Ale se slovem vtipnost se na druhou stranu dá svořit pěkný absolutní rým, Protože se s tím skoro nic nerýmuje, tedy kromě slova cypnost,
                ale není v Ottově slovníku naučném a nezná ho ani google (mimo archivu obce Číž, ale přišlo mi to jako ňákej renonc), tak jsem si to neuznal.
                Nicméně protože mi přišlo, že úplně přesně nevěděls, kde je pahrbek geniality, pořídil jsem ti maximus videoopus her Divadla Járy Cimrmana.
                Sehnat to nebylo úplně snadné, ale snad ti to s tím tumorem pomůže. Kdybys náhodou neměl mechaniku,
                <a class="mechanika" role="button" tabindex="0" @onclick='() => ToggleOverlay(".mechanika")'><span>jednu jsem zprovoznil</span></a> a můžu půjčit,
                ale musíš mi slíbit, že do toho nebudeš hrabat prackama, když to bude zapnuté. To by bylo mrzuté, vyhrát nad rakovinou a pak se nechat vycukat 230 V.
                Kolik peněz ta léčba musela stát už...
            </p>
            <p>
                **** na mladost těla si ještě počkáš, nebo půjde svět doprdele a žádné funkční omlazující kůry prostě nebudou
            </p>
            <p>
                PS: Můj básnický talent mi zajistil manželku, takže si myslím, že jsem v tom prostě dobrej - tím pádem vyjádření v takovéto lyrizující formě mi přijde, jako dobrej nápad! Indžój.
            </p>
            <p>
                A jak se říká mezi námi programátory – „Stay DRY!“
            </p>
            <p class="grey">0re1</p>
        </div>
    </div>
}

@if (showErrorDialog)
{
    <div class="modal-overlay" @onclick="CloseErrorDialog">
        <div class="modal-dialog" @onclick:stopPropagation>
            <p>@errorMessage</p>
            <button type="button" class="modal-close-button" @onclick="CloseErrorDialog">Claude</button>
        </div>
    </div>
}